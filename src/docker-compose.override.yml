## Each database name is unique and follows the following syntax: "_{$database_name}_{$random_string}".
## Each database password is unique and follows the following syntax: "_{$database_name}p_{$random_string}".

x-run-migrations-env: &run-migrations
  RunMigrations: true

services:
  account_database:
    container_name: account_database
    environment:
      POSTGRES_DB: _accountdatabase_gpQcTBtS3NE1S
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: _accountdatabasep_wPRhN1iCfGsb
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - account_postgres_data:/var/lib/postgresql/data/
      
  customer_database:
    container_name: customer_database
    environment:
      POSTGRES_DB: _customerdatabase_PORfERJCaF1p
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: _customerdatabasep_4vvFpVXgTJd
    restart: always
    ports:
      - "5434:5432"
    volumes:
      - customer_postgres_data:/var/lib/postgresql/data/
        
  transaction_database:
    container_name: transaction_database
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin@gmail.com
      RABBITMQ_DEFAULT_PASS: _rabbitmq_3gVE_0c!BbUby+
      RABBITMQ_LOG_LEVEL: error
  
  account_api:
    container_name: account_api
    environment:
      <<: *run-migrations
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__AccountConnectionString: "Host=account_database;Port=5432;Database=_accountdatabase_gpQcTBtS3NE1S;User Id=admin;Password=_accountdatabasep_wPRhN1iCfGsb;"
      ElasticConfiguration: Uri=http://elasticsearch:9200"
    depends_on:
      - account_database
      - rabbitmq
    ports:
      - "8001:8080"

  customer_api:
    container_name: customer_api
    environment:
      <<: *run-migrations
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__CustomerConnectionString: "Host=customer_database;Port=5432;Database=_customerdatabase_PORfERJCaF1p;User Id=admin;Password=_customerdatabasep_4vvFpVXgTJd;"
    depends_on:
      - customer_database
    ports:
      - "8002:8080"
      
  customer_grpc:
    container_name: customer_grpc
    environment:
        <<: *run-migrations
        ASPNETCORE_ENVIRONMENT: Development
        ConnectionStrings__CustomerConnectionString: "Host=customer_database;Port=5432;Database=_customerdatabase_PORfERJCaF1p;User Id=admin;Password=_customerdatabasep_4vvFpVXgTJd;"
    depends_on:
      - customer_database
    ports:
      - "5001:8080"
  
  transaction_api:
    container_name: transaction_api
    environment:
      <<: *run-migrations
      ASPNETCORE_ENVIRONMENT: Development
    depends_on:
      - transaction_database
      - rabbitmq
    ports:
      - "8003:8080"
      
  ocelotapigateway:
    container_name: ocelotapigateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - account_api
      - customer_api
      - transaction_api
    ports:
      - "8010:8080"

  pgadmin:
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: _pgadmin_v-r6yVMv5G30V#2
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin
  
  mongo-express:
    image: mongo-express
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://transaction_database:27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=_transactiondatabase_9G2sTQ*HM5
    restart: always
    ports:
      - "8081:8081"
    volumes:
      - mongo_data:/data/db

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
        
  elasticsearch:
    container_name: elasticsearch
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
  
  kibana:
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601" 